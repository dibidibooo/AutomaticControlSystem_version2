# Generated by Django 4.0.3 on 2022-04-06 17:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название компонента')),
                ('measurement', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('limit_lo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Допустимые нормы не ниже')),
                ('limit_hi', models.CharField(blank=True, max_length=50, null=True, verbose_name='Допустимые нормы не более')),
                ('period', models.CharField(blank=True, max_length=100, verbose_name='Периодичность отбора')),
                ('period_in_hours', models.IntegerField(blank=True, null=True, verbose_name='Срок выполнения задачи в часах')),
                ('standards', models.CharField(blank=True, max_length=100, verbose_name='Наименование НД и методы испытаний')),
                ('recommendation1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Рекомендация выше нормы')),
                ('recommendation2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Рекомендация ниже нормы')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Уведомление')),
            ],
        ),
        migrations.CreateModel(
            name='PlantUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название установки')),
            ],
            options={
                'verbose_name': 'Установка',
                'verbose_name_plural': 'Установки',
            },
        ),
        migrations.CreateModel(
            name='SamplingSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Место отбора проб')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sampling_site', to='projects.plantunit')),
            ],
            options={
                'verbose_name': 'Место отбора проб',
                'verbose_name_plural': 'Места отбора проб',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Статус задачи')),
            ],
            options={
                'verbose_name_plural': 'Statuses',
            },
        ),
        migrations.CreateModel(
            name='WaterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Тип воды')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=100, verbose_name='Задача')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения задачи')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения задачи')),
                ('comp_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название компонента')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assign', to='projects.notification', verbose_name='Уведомление')),
                ('plant_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assign', to='projects.plantunit', verbose_name='Установка')),
                ('sampling_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_assign', to='projects.samplingsite', verbose_name='Место отбора проб')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='task_assign', to='projects.status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assign', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='samplingsite',
            name='water_type',
            field=models.ManyToManyField(related_name='sampling_site', to='projects.watertype'),
        ),
        migrations.CreateModel(
            name='ComponentsSite9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('phosphorus', models.IntegerField(blank=True, null=True, verbose_name='Фосфор')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая (кальций, мг/л)')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component9', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component9', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('phosphorus', models.IntegerField(blank=True, null=True, verbose_name='Фосфор')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая (кальций, мг/л)')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component8', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component8', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая (кальций, мг/л)')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жесткость общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component7', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component7', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Общие Взвешенные вещества')),
                ('alkalinity_phenols', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность по фенолу')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component6', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component6', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные вещества')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component5', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component5', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные вещества')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component4', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component4', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Взвешенные вещества')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('dry_residue', models.IntegerField(blank=True, null=True, verbose_name='Сухой остаток')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('hardness_magnesium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость магниевая')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component3', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component3', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component2', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component2', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite14',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('oxidability', models.IntegerField(blank=True, null=True, verbose_name='Окисляемость')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorine', models.IntegerField(blank=True, null=True, verbose_name='Остаточный хлор')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component14', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component14', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite13',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Взвешенные вещества')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('oxygen_chem', models.IntegerField(blank=True, null=True, verbose_name='Химическая потребность в кислороде (ХПК)')),
                ('active_subst', models.IntegerField(blank=True, null=True, verbose_name='Поверхностно-активные вещества (АПАВ)')),
                ('ammonium', models.IntegerField(blank=True, null=True, verbose_name='Аммонийный азот')),
                ('oxygen_bio', models.IntegerField(blank=True, null=True, verbose_name='Биологическая потребность в кислороде (БПК5)')),
                ('phenols', models.IntegerField(blank=True, null=True, verbose_name='Фенолы')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('nitrate', models.IntegerField(blank=True, null=True, verbose_name='Азот нитратов')),
                ('nitrite', models.IntegerField(blank=True, null=True, verbose_name='Азот нитритов')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component13', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component13', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Взвешенные вещества')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='pH')),
                ('oxygen_chem', models.IntegerField(blank=True, null=True, verbose_name='Химическая потребность в кислороде (ХПК)')),
                ('active_subst', models.IntegerField(blank=True, null=True, verbose_name='Поверхностно-активные вещества (АПАВ)')),
                ('ammonium', models.IntegerField(blank=True, null=True, verbose_name='Аммонийный азот')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component12', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component12', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite11',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component11', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component11', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite10',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chlorine', models.IntegerField(blank=True, null=True, verbose_name='Остаточный хлор')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component10', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component10', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('phosphorus', models.IntegerField(blank=True, null=True, verbose_name='Фосфор')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('hardness_magnesium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость магниевая')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component1', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component1', to='projects.watertype')),
            ],
        ),
    ]
