# Generated by Django 4.0.3 on 2022-03-14 17:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название компонента')),
                ('measurement', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('limits', models.CharField(blank=True, max_length=50, verbose_name='Допустимые нормы не более')),
                ('period', models.CharField(blank=True, max_length=100, verbose_name='Периодичность отбора')),
                ('standards', models.CharField(blank=True, max_length=100, verbose_name='Наименование НД и методы испытаний')),
                ('recommendation1', models.CharField(blank=True, max_length=200, verbose_name='Рекомендация выше нормы')),
                ('recommendation2', models.CharField(blank=True, max_length=200, verbose_name='Рекомендация ниже нормы')),
            ],
        ),
        migrations.CreateModel(
            name='PlantLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название установки')),
            ],
            options={
                'verbose_name': 'Установка',
                'verbose_name_plural': 'Установки',
            },
        ),
        migrations.CreateModel(
            name='SamplingSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Место отбора проб')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sampling_site', to='projects.plantlocation')),
            ],
            options={
                'verbose_name': 'Место отбора проб',
                'verbose_name_plural': 'Места отбора проб',
            },
        ),
        migrations.CreateModel(
            name='WaterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Тип воды')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_type', to='projects.samplingsite')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_solids', models.IntegerField(blank=True, null=True, verbose_name='Общие взвешенные твердые частицы')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('phosphorus', models.IntegerField(blank=True, null=True, verbose_name='Фосфор')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('hardness_calcium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость кальциевая')),
                ('hardness_magnesium', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость магниевая')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component4', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component4', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alkalinity', models.IntegerField(blank=True, null=True, verbose_name='Щёлочность общая')),
                ('hardness', models.IntegerField(blank=True, null=True, verbose_name='Жёсткость общая')),
                ('oxidability', models.IntegerField(blank=True, null=True, verbose_name='Окисляемость')),
                ('salt', models.IntegerField(blank=True, null=True, verbose_name='Солесодержание')),
                ('chlorine', models.IntegerField(blank=True, null=True, verbose_name='Остаточный хлор')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component3', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component3', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Взвешенные вещества')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='Значение pH')),
                ('oxygen_chem', models.IntegerField(blank=True, null=True, verbose_name='Химическая потребность в кислороде (ХПК)')),
                ('active_subst', models.IntegerField(blank=True, null=True, verbose_name='Поверхностно-активные вещества (АПАВ)')),
                ('ammonium', models.IntegerField(blank=True, null=True, verbose_name='Аммонийный азот')),
                ('oxygen_bio', models.IntegerField(blank=True, null=True, verbose_name='Биологическая потребность в кислороде (БПК5)')),
                ('phenols', models.IntegerField(blank=True, null=True, verbose_name='Фенолы')),
                ('chlorides', models.IntegerField(blank=True, null=True, verbose_name='Хлориды')),
                ('sulfates', models.IntegerField(blank=True, null=True, verbose_name='Сульфаты')),
                ('iron', models.IntegerField(blank=True, null=True, verbose_name='Железо')),
                ('nitrate', models.IntegerField(blank=True, null=True, verbose_name='Азот нитратов')),
                ('nitrite', models.IntegerField(blank=True, null=True, verbose_name='Азот нитритов')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component2', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component2', to='projects.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentsSite1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_prod', models.IntegerField(blank=True, null=True, verbose_name='Нефтепродукт')),
                ('suspended_subst', models.IntegerField(blank=True, null=True, verbose_name='Взвешенные вещества')),
                ('ph', models.IntegerField(blank=True, null=True, verbose_name='pH')),
                ('oxygen_chem', models.IntegerField(blank=True, null=True, verbose_name='Химическая потребность в кислороде (ХПК)')),
                ('active_subst', models.IntegerField(blank=True, null=True, verbose_name='Поверхностно-активные вещества (АПАВ)')),
                ('ammonium', models.IntegerField(blank=True, null=True, verbose_name='Аммонийный азот')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время пробы')),
                ('sampling_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component1', to='projects.samplingsite')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_component1', to='projects.watertype')),
            ],
        ),
    ]
